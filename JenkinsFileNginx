pipeline {
    agent any
    environment {
        SERVER_USER = 'devasc' // Cambia esto por el nombre de usuario en el servidor remoto
        SERVER_IP = '192.168.1.110' // Cambia esto por la IP del servidor remoto
        SERVER_DEST_DIR = '/var/www/html/' // Cambia esto por el directorio de destino en el servidor remoto
        SSH_KEY = credentials('ssh-credential') // Usando el ID de la credencial configurada
        SUDO_PASSWORD = credentials('sudo-password') // Usando el ID de la credencial para la contrase√±a de sudo
    }
    stages {
        stage('Install Dependencies') {
            steps {
                sh 'npm ci'
            }
        }
        stage('Build') {
            steps {
                sh 'npm run build'
            }
        }
        stage('Transfer to Server') {
            steps {
                script {
                    def buildDir = 'dist' // Cambia esto por el directorio que contiene tu build
                    sh """
                    echo "${SUDO_PASSWORD}" | sudo -S scp -o StrictHostKeyChecking=no -i "${SSH_KEY}" -r ${buildDir} ${SERVER_USER}@${SERVER_IP}:${SERVER_DEST_DIR}
                    """
                }
            }
        }
        stage('Restart Nginx') {
            steps {
                script {
                    sshCommand = "ssh -o StrictHostKeyChecking=no -i \"${SSH_KEY}\" ${SERVER_USER}@${SERVER_IP} 'sudo systemctl restart nginx'"
                    sh sshCommand
                }
            }
        }
    }
}

